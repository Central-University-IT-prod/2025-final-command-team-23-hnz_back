services:
  backend:
    build:
      context: ./loyalT
      dockerfile: ./Dockerfile
    command: sh -c "python manage.py collectstatic &&
      python manage.py migrate &&
      gunicorn loyalT.wsgi:application --bind REDACTED  --workers 4 --log-level debug"
    ports:
      - "8080:8080"
    environment:
      - SECRET_KEY=${SECRET_KEY}
      - MINIO_ENDPOINT=${MINIO_ENDPOINT}
      - MINIO_REDIRECT_HOST=${MINIO_REDIRECT_HOST}
      - MINIO_PORT=${MINIO_PORT}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_WEB_PORT=${MINIO_WEB_PORT}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_HOST=${POSTGRES_HOST}

    depends_on:
      db:
        condition: service_healthy
      minio:
        condition: service_healthy

  bot:
    container_name: aiogram-bot
    build: telegram/
    command: python main.py
    volumes:
      - ./telegram:/code
    environment:
      - BOT_TOKEN=${BOT_TOKEN}


  db:
    image: postgres:15
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    restart: always
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5


  minio:
    image: minio/minio:latest
    restart: always
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:${MINIO_PORT}/minio/health/live" ]
      interval: 30s
      timeout: 20s
      retries: 3
    ports:
      - ${MINIO_PORT}:${MINIO_PORT}
      - ${MINIO_WEB_PORT}:${MINIO_WEB_PORT}
    volumes:
      - minio_data:/data
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    command: server /data --console-address ":${MINIO_WEB_PORT}"

volumes:
  postgres_data:
  minio_data:
